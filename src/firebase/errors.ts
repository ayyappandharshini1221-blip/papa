// DO NOT EDIT. This file is generated by Firebase Studio.
//
// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,

import { getAuth } from 'firebase/auth';

// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
export type SecurityRuleContext = {
  path: string;
  operation: 'get' | 'list' | 'create' | 'update' | 'delete' | 'write';
  requestResourceData?: any;
};

/**
 * Custom Error for Firestore Permission Denied.
 *
 * This error is intended to be caught and re-thrown by Firestore data-fetching
 * hooks to provide more context to the developer in the Next.js error overlay.
 */
export class FirestorePermissionError extends Error {
  public cause: {
    context: SecurityRuleContext;
    auth: object | null;
  };
  constructor(context: SecurityRuleContext) {
    const auth = getAuth();
    const currentUser = auth.currentUser;
    // Do not include the full user object in the error message, as it may contain sensitive information.
    // Instead, we just want to show the user's UID and display name.
    const authContext = currentUser
      ? {
          uid: currentUser.uid,
          displayName: currentUser.displayName,
          email: currentUser.email,
          photoURL: currentUser.photoURL,
        }
      : null;
    const message = `FirestoreError: Missing or insufficient permissions: The following request was denied by Firestore Security Rules:\n${JSON.stringify({ auth: authContext, ...context }, null, 2)}`;
    super(message);
    this.name = 'FirestorePermissionError';
    this.cause = {
      context,
      auth: authContext,
    };
    // This is to make the error message more readable in the Next.js error overlay.
    this.stack = '';
  }
}
